#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=99
STOP=99

USE_PROCD=1

get_translated_host()
{
    # Lookup host as a uri and return just host
    local __return_host=$1
    local uri=$2

    if case $uri in https*) false;; esac; then
        # Only host - add https:// for lookup
        uri="https://"$uri"/"
    fi
    translated_url=$(wget -qO- "http://127.0.0.1/api/uri/geturiwithpath/uri=$uri")
    if [ "translated_url" != "" ] ; then
        host=$translated_url
    fi
    # Strip leading https://
    host=${host##https://}
    # Strip trailing path
    host=${host%%/*}

	eval "$__return_host=$host"
}

start_service() {
    CLOUD=`jsonfilter -i /etc/config/current.json -e '@["system"]["cloud"]'`
    # If there are no cloud settings, just enable cloud access
    # This is for backward compatibility
    if [ -z "$CLOUD" ] ; then
        ENABLED="true"
    else
        ENABLED=`jsonfilter -i /etc/config/current.json -e '@["system"]["cloud"]["enabled"]'`
    fi

    if [ $ENABLED = "true" ] ; then
        SERVERS=`jsonfilter -i /etc/config/current.json -e '@["system"]["cloud"]["cloudServers"]' | tr -d ',"[]'`

        for server in $SERVERS ; do
            host=""
            logger -t pyconnector "Checking URI translation for $server..."
            get_translated_host host $server
            if [ -z $host ] ; then
                logger -t pyconnector "Unable to find $server in URI translations, assuming $server"
                host=$server
            fi

            procd_open_instance
	        procd_set_param command /usr/bin/pyconnector -s $host
	        procd_set_param stdout 1
	        procd_set_param stderr 1

            # restart indefinitely if crashed, 120 seconds between attempts
            procd_set_param respawn 3600 120 0
	        procd_close_instance
        done
    fi
}
